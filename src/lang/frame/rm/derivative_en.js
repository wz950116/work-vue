export default {
  derivative: {
    optionAccountTrade: {
      title: 'Option account transaction',
      customerName: 'customer',
      tradingDay: 'tradingDay',
      strikeFlag: 'strikeFlag',
      derivativeAccount: 'derivativeAccount',
      optionVarietiesName: 'optionVarieties',
      optionsType: 'options',
      marketType: 'market',
      strikePrice: 'strikePrice',
      optionFee: 'optionFee',
      direction: 'direction',
      exerciseType: 'exercise',
      volume: 'volume',
      commission: 'commission',
      marketmakersName: 'marketmakers',
      optionFeeTotal: 'optionFeeTotal',
      settlementPrice: 'settlement Price',
      dealDate: 'deal Date',
      dueDate: 'due Date',
      currencyName: 'currency',
      varietiesType: 'varieties Type',
      optionVarietiesCode: 'option Varieties Code',
      optionBailFee: 'option Bail Fee',
      confirm: 'confirm',
      confirmMsg: 'the price of the subject matter is the fair price of the subject matter when exercising the right. It is used to calculate the hedging profit and loss of the option. Please be sure to fill in. The status cannot be changed after the status is changed. Is the exercise (performance) operation confirmed? ',
      dataSourceType: 'dataSource'
    },
    optionImportRecord: {
      Title: 'Option data import management',
      formTitle: 'Customer information and funding situation',
      accountId: 'futures account',
      tradingDay: 'transaction date',
      exerciseDate: 'exercise Date',
      accountDate: 'accounting date',
      preBalance: '上日结存',
      businessDetails: 'detail details',
      optionVarietiesName: 'variety',
      futuresContractCode: 'contracted',
      optionContractCode: 'contract',
      strikePrice: 'The exercise price',
      Royalty: 'Right money',
      yearMonth: 'Contract month',
      optionsType: 'type',
      Direction: 'sale direction',
      Volume: 'quantity',
      settlementPrice: 'Settlement price',
      Commission: 'Cost fee',
      derivativeAccount: 'derivativeAccount',
      uploadDt: 'upload date',
      checkResult: 'test result'
    },
    optionAccountImport: {
      title: 'Option data import',
      formTitle: 'Customer information and funding',
      accountId: 'Futures account',
      accountDate: 'Date of entry',
      preBalance: 'Initial deposit',
      optionsType: 'Option type',
      tradingDay: 'Date of transaction',
      businessDetails: 'Business details',
      productId: 'Varieties',
      targetInstrumentId: 'Contract mark',
      instrumentId: 'contract',
      strikePrice: 'Right price',
      royalty: 'Rights gold',
      yearMonth: 'Contract month',
      direction: 'Direction',
      volume: 'amount',
      settlementPrice: 'Settlement price',
      commission: 'commission',
      checkResult: 'detection result'
    },
    optionAccountPosition: {
      title: 'Option account position',
      optionAccount: 'Option account',
      optionsType: 'Option type',
      positionDate: 'Date of transaction',
      derivativeAccount: 'Subject code',
      investorName: 'Subject name',
      targetInstrumentId: 'Contract mark',
      direction: 'Direction',
      mainName: 'Subject name',
      productId: 'Varieties',
      instrumentId: 'contract',
      strikePrice: 'Right price',
      royalty: 'Rights gold',
      yearMonth: 'Contract month',
      volume: 'amount',
      settlementPrice: 'Settlement price',
      priceDate: 'Price date',
      exchangeName: 'Exchange',
      futuresVarietiesName: 'Variety',
      futuresContractName: 'Contract name',
      futuresContractCode: 'Contract code',
      intradayPrice: 'Intraday price',
      openPrice: 'Opening price',
      closingPrice: 'Closing price',
      highestPrice: 'Highest price',
      lowestPrice: 'Low price',
      currencyName: 'Currency',
      result: 'detection result',
      positionProfit: 'opsition gain and loss'
    },
    // Sub-account data import management
    futruesSubImportRecord: {
      title: 'Sub-account import record',
      derivativeSubAccount: 'sub-account',
      tradingDay: 'transaction date',
      tradingDayFrom: 'Transaction date starts',
      tradingDayTo: 'End of trading date',
      importDate: 'import time',
      importDateFrom: 'Import time starts',
      importDateTo: 'End of import time',
      uploadDt: 'import time'
    },
    // Sub-account funds
    futruesSubAccount: {
      Title: 'Sub-account funds',
      dialogTitle: 'Sub-account funds import',
      derivativeSubAccount: 'sub-account',
      closeProfit: 'Close the position',
      positionProfit: 'Postal profit and loss',
      Commission: 'Cost fee',
      posiMargin: 'position margin',
      tradingDay: 'transaction date',
      tradingDayFrom: 'transaction date',
      tradingDayTo: 'transaction date'
    },
    // Futures - sub-account transaction
    futruesSubTrade: {
      Title: 'Sub-account transaction',
      tradingDay: 'transaction date',
      tradingDayForm: 'transaction date',
      tradingDayTo: 'transaction date',
      derivativeAccount: 'futures account',
      derivativeSubAccount: 'sub-account',
      projectName: 'project',
      futuresContractCode: 'contract',
      orderSysId: 'trust order number',
      Direction: 'direction',
      offsetFlag: 'Kaiping',
      Price: 'price',
      Volume: 'quantity',
      Amount: 'the amount of the transaction',
      Commission: 'Cost fee',
      tradeDate: 'transaction date',
      tradeTime: 'transaction time',
      tradeTimeForm: 'transaction time',
      tradeTimeTo: 'transaction time',
      hedgeFlag: 'speculation/hedge',
      tradeId: 'Completion number',
      mainName: 'customer name',
      dataSourceType: 'data source'
    }, // Futures account position
    futuresPosi: {
      Title: 'Futures account position',
      tradingDay: 'transaction date',
      tradingDayFrom: 'transaction date',
      tradingDayTo: 'transaction date',
      derivativeAccount: 'futures account',
      futuresContractCode: 'contract',
      posiDirection: 'direction',
      Position: 'quantity',
      positionPrice: 'the average price of the position',
      preSettlementPrice: 'Yesterday settlement price',
      settlementPrice: 'this settlement price',
      positionProfit: 'Postal profit and loss',
      useMargin: 'Margin',
      hedgeFlag: 'speculation/hedge',
      mainName: 'customer name',
      dataSourceType: 'data source'
    },
    // sub-account position
    futuresSubPosi: {
      Title: 'Sub-account position',
      tradingDay: 'transaction date',
      tradingDayFrom: 'transaction date',
      tradingDayTo: 'transaction date',
      derivativeSubAccount: 'sub-account',
      projectName: 'project',
      futuresContractCode: 'contract',
      posiDirection: 'direction',
      Position: 'quantity',
      positionPrice: 'the average price of the position',
      preSettlementPrice: 'Yesterday settlement price',
      settlementPrice: 'this settlement price',
      positionProfit: 'Postal profit and loss',
      useMargin: 'Margin',
      hedgeFlag: 'speculation/hedge',
      mainName: 'customer name',
      dataSourceType: 'data source'
    },
    futuresAccountTrade: {
      title: 'Futures account transaction',
      derivativeAccount: 'Futures account',
      childAccount: 'Futures Subaccount',
      entrustmentNumber: ' Entrustment single number',
      tradeTime: 'Transaction time',
      accountDate: 'Date of entry',
      direction: 'direction',
      offsetFlag: 'Off Set Flag',
      mainName: 'Subject name',
      instrumentId: 'Contract code',
      price: 'Price',
      volume: 'Number',
      tradeAmount: 'Transaction amount',
      commission: 'Service Charge'
    },
    futuresAccountBalance: {
      title: 'Futures account funds',
      dialogTitle: 'Futures account funds import',
      accountId: 'Futures account',
      date: 'date',
      investorName: 'Subject name',
      childAccount: 'Futures Subaccount',
      preBalance: 'Initial deposit',
      deposit: 'Deposit on the day',
      withdraw: 'When sunrise gold',
      capitalAccess: 'Capital access',
      closeProfit: 'offset gain and loss',
      commission: 'Service Charge',
      finalDeposit: 'Final deposit',
      positionProfit: 'opsition gain and loss',
      currMargin: 'Position margin',
      available: 'Available funds',
      finalEquity: 'End of term interest'
    },
    futuresAccountPosition: {
      title: 'Futures account positions',
      accountId: 'Futures account',
      date: 'date',
      investorName: 'Subject name',
      childAccount: 'Futures Subaccount',
      posiDirection: 'direction',
      instrumentId: 'contract',
      position: 'Number',
      avgPrice: 'Equal stock price',
      preSettlementPrice: 'Last settlement price',
      settlementPrice: 'Present settlement price',
      useMargin: 'Bond',
      positionProfit: 'opsition gain and loss'
    },
    futruesImportRecord: {
      Title: 'Futures data import management',
      formTitle: 'query',
      derivativeAccount: 'futures account',
      tradingDay: 'transaction date',
      tradingDayFrom: 'Transaction date starts',
      tradingDayTo: 'End of trading date',
      importDate: 'import time',
      importDateFrom: 'Import time starts',
      importDateTo: 'End of import time',
      mainName: 'Principal name',
      customerName: 'customer name',
      brokerName: 'future company name',
      uploadDt: 'import time'
    },
    futuresAccountImport: {
      title: 'Import of futures account',
      formTitle: 'Customer information and funding',
      accountId: 'Futures account',
      tradingDay: 'Date of transaction',
      tradeTime: 'Transaction time',
      accountDate: 'Date of entry',
      preBalance: 'Last day Balance',
      businessDetails: 'Business details',
      positionDetails: 'Position details',
      instrumentId: 'contract',
      direction: 'Buy / sell',
      hedgeFlag: 'Speculation / hedge',
      price: 'Transaction price',
      volume: 'Number of hands',
      offsetFlag: 'Open / flat',
      checkResult: 'Examination results',
      buyPosition: 'Buy a warehouse',
      buyPrice: 'Buy the average price',
      salePosition: 'Sell a warehouse',
      salePrice: 'Sell the average price',
      preSettlementPrice: 'Last settlement price',
      settlementPrice: 'Present settlement price'
    }
  }
}
