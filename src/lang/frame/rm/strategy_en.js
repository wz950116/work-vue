export default {
  strategy: {
    msg: {
      quantitativeJudgement: 'Matches should be less than or equal to the number of unmatches',
      automatchQuantityJudgement: 'Transaction details must be equal to the number of automatic matches',
      matchQuantityJudgement: 'Automatic matches is not zero',
      hasMatch: 'The transaction details already exist and the number of matches should be greater than the number of matches in the list of spot positions',
      indealTips: 'Approval is passed just can make instruction a deal oneself',
      postionTips: 'Approve is passed  just can make position a deal oneself'
    },
    btn: {
      monitorTarget: 'monitor Target'
    },
    strategyManage: {
      title: 'strategy title',
      detailTitle: 'detail Title',
      monitorTitle: 'monitor Title',
      id: 'id',
      usingFlag: 'using Flag',
      organName: 'organ Name',
      strategyName: 'strategy Name',
      strategyCode: 'strategy Code',
      projectName: 'project Name',
      nature: 'nature',
      type: 'type',
      makeDate: 'strategy Make Date',
      startDate: 'strategy Start Date',
      endDate: 'strategy End Date',
      applicantId: 'apply Name',
      makeUser: 'marker User',
      department: 'department',
      monitor: {
        totalCapitalOccupation: 'total Capital Occupation',
        targetProfit: 'target Profit',
        stopLoss: 'stop Loss',
        hedgingRatio: 'hedging Ratio',
        hedgingRatioStart: 'hedging Ratio Start',
        hedgingRatioEnd: 'hedging Ratio End'
      },
      edit: {
        id: 'id',
        organName: 'organ Name',
        strategyName: 'strategy Name',
        strategyCode: 'strategy Code',
        projectName: 'project Name',
        department: 'department',
        startDate: 'strategy Start Date',
        endDate: 'strategy End Date',
        applicantId: 'apply Name',
        nature: 'nature',
        type: 'type',
        firstLeg: 'first Leg',
        secondLeg: 'second Leg',
        makeDate: 'strategy Make Date',
        makeUser: 'marker User',
        describe: 'describe',
        changeUser: 'change User',
        changeDate: 'change Date',
        changeRemark: 'change Desc'
      },
      attachTitle: 'attach',
      changeDataTitle: 'change Data',
      changeHistoryTitle: 'change History',
      authTitle: 'auth History',
      attachList: {
        attachMent: 'attach Ment',
        fileName: 'file Name',
        createDate: 'create Date',
        createUser: 'create User',
        remark: 'remark'
      },
      authList: {
        authDate: 'auth Date',
        authUser: 'auth User',
        usingFlag: 'using Flag',
        content: 'content'
      }
    },
    strategyChangeManage: {
      title: 'strategy Change Manage List',
      id: 'id',
      usingFlag: 'using Flag',
      strategyName: 'strategy Name',
      strategyCode: 'strategy Code',
      applicantId: 'apply Name',
      makeUser: 'marker User',
      changeUser: 'change User',
      changeDate: 'change Date',
      changeRemark: 'change Desc',
      department: 'department'
    },
    //
    instructions: {
      instructionsName: 'Instruction Name',
      instructionsCode: 'Instruction Code',
      instructionsType: 'Instruction Type',
      giveUser: 'Give User',
      contract: 'Contract',
      buyOrSell: 'Buy Or Sell',
      openOrClose: 'Open Or Close',
      organName: 'Organ Name',
      instructionsState: 'Instruction State',
      strategyOrPlan: 'Strategy Or Plan',
      strategyOrPlanName: 'Strategy Or Plan Name',
      strategyOrPlanCode: 'Strategy Or Plan Code',
      giveTime: 'Give Time',
      endTime: 'End Time',
      tradUser: 'Trade User',
      futuresAccount: 'Futures Account',
      childAccount: 'Child Account',
      instructionQuantity: 'Instruction Quantity',
      quantity: 'Quantity',
      instrIndealQuantity: 'Instruction Turnover Quantity',
      positionMatchQuantity: 'Position Turnover Quantity',
      turnoverQuantity: 'Turnover Quantity',
      completion: 'Completion',
      title: 'Instruction Manage',
      department: 'Department',
      edit: {
        instructionInfo: 'Instruction Information',
        arrayQuantity: 'Group Quantity',
        array: 'Group',
        arrayInfo: 'Group Information',
        arrayUnit: 'Hand/Group',
        type: 'Type',
        unit: 'Unit',
        unitName: 'Hand',
        turnoverPrice: 'Turnover Price',
        turnoverPriceMargin: 'Turnover Price Margin',
        currency: 'Currency',
        remark: 'remark',
        turnoverQuantity: 'Turnover Quantity',
        price: 'Price',
        priceMargin: 'Price Margin'
      },
      indeal: {
        saveCheck: 'The input data is incomplete',
        price: 'Price',
        instructionInfoList: 'Instruction Info List',
        indealDetailList: 'Consideration Instruction List',
        orderSysId: 'Entrust Bill Code',
        instrIndealTitle: 'Instruction Picker',
        instrCommissionTitle: 'Virtual command modification',
        commission: 'Commission',
        noMatchLots: 'Unmatch Quantity',
        derivativeInstructionList: 'Derivative Turnover List',
        unusedQuantity: 'Unused Quantity',
        tradeDate: 'Turnover Time',
        derivativeAccount: 'Actual Quotation Account',
        derivativeSubAccount: 'Child Account',
        positionMatchTitle: 'Turnover Detail Picker'
      }
    }
  }
}
