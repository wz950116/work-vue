export default {
  spot: {
    // validate
    validateMsg: {
      noEmptyProduct: 'Commodity information can not be empty.',
      noEmptyQuantity: 'The number of contracts should not be empty.',
      noEmptyFrameQuantity: 'The number of frame should not be empty.',
      noEmptyUnitMoreLess: 'Overflow and Short Loading Units Can not Be Empty.',
      noEmptyPurMarket: 'The market should not be empty.',
      noEmptySaleMarket: 'The market should not be empty.',
      noRepeatProduct: 'Commodity information can not be repeated.',
      unfinedPromise: 'Goods in margin do not exist in commodity information.',
      noRepeatPromise: 'The name of the margin must not be repeated.',
      unfinedPlan: 'Goods do not exist in commodity information in delivery plan.',
      noRepeatPlan: 'The same commodity name can not be repeated for planned delivery.',
      undefinedPrice: 'Price information does not exist in commodity information.',
      noRepeatPrice: 'Commodity names cannot be repeated in pricing information.',
      attrInput: 'Attribute must input',
      promiseRowNumError: 'Inconsistency of margin amount and commodity information',
      priceRowNumError: 'Pricing information is inconsistent with commodity information',
      pricingQuantityCheckError: 'Pricing quantity must be greater than zero',
      pricingPriceError: 'Pricing must be above zero',
      pricingQuantityError: 'Pricing quantity should not exceed the number of open points',
      pricingPointPriceQuantityError: 'The maximum point price must be greater than the minimum point price',
      planDateError: 'No overlap of planned delivery time is allowed'
    },

    // frame
    frameProtocol: {
      // form
      title: 'Framework Agreement Management',
      protocolCode: 'Protocol number',
      titleId: 'title',
      customerId: 'Customer name',
      customerTitleId: 'Customer title',
      productId: 'Commodity name',
      protocolStat: 'Protocol state',
      protocolNo: 'Protocol number',
      businessName: 'Business type',
      serviceManagerId: 'Service Manager',
      documentNo: 'Document number',
      signDate: 'Date of signing',
      protocolStartDate: 'Beginning of the protocol',
      protocolEndDate: 'Ending of the protocol',
      // list
      titleName: 'title',
      customerName: 'Customer name',
      customerTitleName: 'Customer title',
      productName: 'Commodity name',
      serviceManagerName: 'Service Manager',
      tradeType: 'Type of trade',
      quantity: 'quantity',
      currencyName: 'currency',
      settlementBasis: 'Basis of settlement',
      settlementMethod: 'Settlement method',
      invoiceAgreement: 'Invoice agreement',
      makerDate: 'single date',
      makerUserName: 'single person',
      changeDate: 'change date',
      changeUserName: 'change person',
      closeDate: 'close date',
      closeUserName: 'closed',
      edit: {
        protocolCode: 'protocol code',
        titleId: 'title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        protocolNo: 'Protocol number',
        documentNo: 'Document number',
        deptId: 'department',
        projectId: 'Project',
        signDate: 'Date of signing',
        serviceManagerId: 'Service Manager',
        protocolStartDate: 'Beginning of the agreement',
        protocolEndDate: 'Agreement period',
        tradeType: 'Type of trade',
        currencyId: 'currency',
        businessName: 'Business type',
        mainInfo: 'Frame information',
        prodList: {
          name: 'Commodity information',
          productId: 'Commodity name',
          quantity: 'Number of protocols',
          unit: 'unit',
          moreLess: 'More or less',
          unitMoreLess: 'Unit (over short)',
          measurementUnit: 'Packing unit',
          temporaryPrice: 'temporary price',
          remark: 'Explain'
        },
        setter: {
          name: 'Settlement and payment',
          settlementBasis: 'Basis of settlement',
          settlementMethod: 'Settlement method',
          invoiceAgreement: 'Invoice agreement',
          latestPaymentDate: 'latest Payment Date',
          hedgingBeneficiary: 'hedging Beneficiary',
          costInvoice: 'costInvoice',
          remark: 'remark'
        },
        remark: 'remark',
        attachTitle: 'Enclosure',
        changeInfo: {
          name: 'Change information',
          history: 'Change record',
          changeDate: 'change date',
          changeUserName: 'change person',
          changeRemark: 'Change instructions'
        },
        approvalHistory: {
          name: 'Review history',
          approvalDate: 'Date of audit',
          approvalUser: 'Auditor',
          approvalState: 'Audit status',
          approvalSuggestion: 'Audit opinion'
        },
        purchaseOrder: 'Procurement contract',
        saleoOrder: 'sales contract'
      }
    },

    // Procurement contract
    purchaseOrder: {
      name: 'Procurement contract',
      // 查询面板
      query: {
        contractNo: 'Contract numbe',
        titleId: ' title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        productId: 'Commodity name',
        contractStat: 'State of contract',
        originalNo: 'Contract No.',
        frameProtocolId: 'framework agreement',
        serviceManagerId: 'Service Manager',
        businessName: 'Business type',
        relationContract: 'related sales',
        signDate: 'Date of signing',
        signDateFrom: 'Start date of signing',
        signDateTo: 'End date of signing',
        contractType: 'type of contract',
        purchaseSaleType: 'Purchase and sale type'
      },
      // 查询列表
      queryList: {
        contractStat: 'State of contract',
        titleName: ' title',
        contractNo: 'Contract numbe',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        documentNo: 'Document number',
        originalNo: 'Contract No.',
        contractType: 'type of contract',
        tradeType: 'Type of trade',
        productName: 'Commodity name',
        quantity: 'quantity',
        currencyName: 'currency',
        contractStartDate: 'Beginning of the contract period',
        contractEndDate: 'End of contract period',
        deliveryType: '  Delivery mode ',
        deliveryPlaceName: 'Delivery address',
        transportType: 'Mode of transport ',
        paymentType: 'Payment method ',
        settlementBasis: 'basis for settlement',
        invoiceAgreement: 'invoice agreement',
        serviceManagerName: 'Service Manager',
        signDate: 'Date of signing',
        protocolCode: 'framework agreement',
        relationContract: 'related sales',
        businessName: 'Business type',
        makerDate: 'single date',
        makerUserName: 'single person',
        changeDate: 'change date',
        changeUserName: 'change person',
        closeDate: 'close date',
        closeUserName: 'closed'
      },
      productTitle: 'Commodity information',
      payTitle: 'Delivery and payment',
      promiseTitle: 'Margin agreement',
      planTitle: 'Delivery plan',
      priceTitle: 'Pricing information',
      attachTitle: 'Enclosure',
      changeDataTitle: 'Change information',
      changeHistoryTitle: 'Change record',
      changeRemarkTitle: 'Change instructions',
      changeInfoTitle: 'Change information',
      authTitle: 'Review history',
      contractBatch: 'Sales contract / batch',
      purBatchTitle: 'Purchasing batch',
      saleBatchTitle: 'sale Batch',
      purDeliveryTitle: 'Purchase order',
      instoreDetailTitle: 'Warehousing details',
      priceDetailTitle: 'Pricing details',
      invoiceDetailTitle: 'List of invoices',
      payApplyTitle: 'Application for payment',
      payDetailTitle: 'Payment details',
      // 主信息
      edit: {
        mainInfo: 'Main information',
        contractNo: 'Contract numbe',
        purchaseSaleType: 'Purchase and sale type',
        contractType: 'type of contract',
        titleId: ' title',
        originalNo: 'Contract No.',
        tradeType: 'Type of trade',
        signDate: 'Date of signing',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        deptId: 'department',
        documentNo: 'Document number',
        currencyId: 'currency',
        serviceManagerId: 'Service Manager',
        frameProtocolId: 'framework agreement',
        relationContract: 'related sales',
        contractStartDate: 'Beginning of the contract period',
        contractEndDate: 'End of contract period',
        projectId: 'Project',
        businessName: 'Business type',
        productCategoryId: 'Commodity classification',
        changeUser: 'change person',
        changeDate: 'change date',
        changeDesc: 'Change instructions',
        usingFlag: 'State of contract'
      },
      // Commodity information
      productList: {
        productId: 'Commodity name',
        quantity: 'quantity',
        relationQuantity: 'Relation of quantity',
        unit: 'unit',
        moreLess: 'More or less',
        unitMoreLess: 'Unit (over short)',
        measurementUnit: 'Packing unit',
        purMarketId: 'Purchasing market',
        saleMarketId: 'Saling market',
        brand: 'brand',
        brandSouce: 'brand Souce',
        content: 'content',
        contentSouce: 'content Souce',
        distict: 'distict',
        distictSouce: 'distict Souce',
        material: 'material',
        materialSouce: 'material Souce',
        specifications: 'specifications',
        specificationsSouce: 'specifications Souce',
        steelMill: 'steel Mill',
        steelMillSouce: 'steel Mill Souce',
        brandName: 'Brand name',
        brandNameSouce: 'brand Name Souce',
        temporaryPrice: 'temporary price',
        remark: 'Explain'
      },
      // Delivery and payment
      payList: {
        deliveryType: '  Delivery mode ',
        transportType: 'Mode of transport ',
        settlementMethod: 'Settlement method',
        invoiceAgreement: 'invoice agreement',
        deliveryPlace: 'Place of delivery',
        settlementBasis: 'basis for settlement',
        paymentType: 'Payment method ',
        latestPaymentDate: 'latest Payment Date',
        costInvoice: 'cost Invoice'
      },
      // Margin agreement
      promiseInfo: {
        productId: 'Commodity name',
        productAttr: 'Commodity Attribute',
        initMarginLevel: 'init Margin Level',
        nonPriceBenchmarkId: 'non Price Benchmark Id',
        nonPriceTriggerRatio: 'non Price Trigger Ratio',
        nonPriceRatio: 'non Price Ratio',
        fixPriceBenchmarkId: 'fix Price Benchmark Id',
        fixPriceTriggerRatio: 'fix Price Trigger Ratio',
        fixPriceRatio: 'fix Price Ratio'
      },
      // Delivery plan
      planInfo: {
        productId: 'Commodity name',
        productAttr: 'Commodity Attribute',
        planStartDate: 'plan Start Date',
        planEndDate: 'plan End Date',
        planQuantity: 'plan Quantity',
        unit: 'unit',
        remark: 'Explain'
      },
      // Pricing information
      priceInfo: {
        productId: 'Commodity name',
        productAttr: 'Commodity Attribute',
        pricingMode: 'Pricing mode',
        priceParty: 'Price party',
        fixedPrice: 'Fixed price',
        currencyId: 'currency',
        premiumType: 'Premium type',
        fixedPremium: 'Fixed premium',
        premiumCurrencyId: 'Premium Currency',
        remark: 'Explain',
        edit: {
          title: 'Pricing information',
          add: 'Add',
          update: 'Update',
          view: 'View',
          productId: 'Commodity name',
          productAttr: 'Commodity Attribute',
          pricingMode: 'Pricing mode',
          benchmarkId: 'Pricing benchmarks',
          benchmarkType: 'benchmark Type',
          monthlyCycle: 'monthly C ycle',
          pointPriceMonthSType: 'point Price Month S Type',
          pointPriceDayS: 'point Price DayS',
          pointPriceMonthEType: 'point Price Month E Type',
          pointPriceDayE: 'point Price Day E',
          pointPriceStartDate: 'point Price Start Date',
          pointPriceEndDate: 'point Price End Date',
          minPointPriceQuantity: 'min Point Price Quantity',
          maxPointPriceQuantity: 'max Point Price Quantity',
          priceParty: 'Price party',
          ourQuantity: 'Our proportion /quantity',
          ourUnit: 'Our proportion / quantity unit',
          otherQuantity: 'Ratio/quantity',
          otherUnit: 'Ratio / quantity unit',
          averagePriceBasisId: 'Pricing benchmarks',
          averagePriceType: 'average Price Type',
          anchorDateType: 'anchor Date Type',
          averagePriceOption: 'average Price Option',
          averagePriceMonthSType: 'average Price Month S Type',
          averagePriceDayS: 'average Price Day',
          averagePriceMonthEType: 'average Price Month E Type',
          averagePriceDayE: 'average Price Day E',
          averageTime: 'average Time',
          anchorStartType: 'anchor Start Type',
          anchorStartDay: 'anchor Start Day',
          anchorEndType: 'anchor End Type',
          anchorEndDay: 'anchor End Day',
          averagePriceStartDate: 'average Price Start Date',
          averagePriceEndDate: 'Average price period',
          fixedPrice: 'Fixed price',
          currencyId: 'currency',
          premiumType: 'Premium type',
          fixedPremium: 'Fixed premium',
          premiumCurrencyId: 'Discount currency',
          remark: 'Explain',
          // premium
          premiumDetail: {
            title: 'Premium details',
            amount: 'quantity',
            percent: 'percent',
            sign: 'sign',
            executionQuantity: 'Cumulative execution quantity',
            premium: 'premium',
            currencyId: 'currency',
            remark: 'Explain'
          }
        }
      },
      // Change record
      changeHistory: {
        changeDate: 'change date',
        changeUserName: 'change person',
        authStatus: 'Audit status',
        changeRemark: 'Change instructions'
      },
      // Review history
      reviewHistory: {
        authDate: 'Date of audit',
        authUser: 'Auditor',
        usingFlag: 'Audit status',
        content: 'Audit opinion'
      },
      // 采购(销售)合同/批次
      contractBatchList: {
        contractStat: 'State of contract',
        titleName: ' title',
        contractNo: 'Contract numbe',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        documentNo: 'Document number',
        contractType: 'type of contract',
        tradeType: 'Type of trade',
        productName: 'Commodity name',
        quantity: 'quantity',
        currencyName: 'currency',
        contractStartDate: 'Beginning of the contract period',
        contractEndDate: 'End of contract period',
        deliveryType: '  Delivery mode ',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport ',
        paymentTypeName: 'Payment method ',
        settlementBasis: 'basis for settlement',
        invoiceAgreement: 'invoice agreement',
        serviceManagerName: 'Service Manager',
        signDate: 'Date of signing',
        protocolCode: 'framework agreement',
        relationContract: 'Related procurement',
        businessName: 'Business type',
        makerDate: 'single date',
        makerUserName: 'single person',
        changeDate: 'change date',
        changeUserName: 'change person',
        modifyDate: 'modify date',
        modifyUserName: 'modify person',
        closeDate: 'close date',
        closeUserName: 'close person'
      },
      // 采购批次
      purBatch: {
        titleName: ' title',
        contractNo: 'batch number',
        customerName: 'Customer name',
        customerTitleId: 'Customer title',
        originalNo: 'Contract No.',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'Batch arrest',
        tradeType: 'Type of trade',
        productName: 'Commodity name',
        quantity: 'batch quantity',
        currencyName: 'currency',
        deliveryType: '  Delivery mode ',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport ',
        paymentTypeName: 'Payment method ',
        settlementBasis: 'basis for settlement',
        invoiceAgreement: 'invoice agreement',
        serviceManagerName: 'Service Manager',
        signDate: 'Date of signing',
        protocolCode: 'framework agreement',
        relationContract: 'related sales',
        businessName: 'Business type',
        makerDate: 'single date',
        makerUserName: 'single person',
        modifyDate: 'modification date',
        modifyUserName: 'Modifier'
      }
    },

    // 采购批次
    purchaseBatch: {
      name: 'Purchasing batch',
      query: {
        contractNo: 'batch number',
        titleId: ' title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        productId: 'Commodity name',
        contractStat: 'Batch state',
        originalNo: 'Contract No.',
        frameProtocolId: 'framework agreement',
        serviceManagerId: 'Service Manager',
        businessName: 'Business type',
        relationBatchNo: 'related sales'
      },
      list: {
        contractStat: 'Batch state',
        titleName: ' title',
        contractNo: 'batch number',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        productName: 'Product Name',
        originalNo: 'Contract No',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'Batch arrest',
        tradeType: 'Type of trade',
        quantity: 'batch quantity',
        currencyName: 'currency',
        deliveryType: '  Delivery mode ',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport ',
        paymentTypeName: 'Payment method ',
        settlementBasis: 'basis for settlement',
        invoiceAgreement: 'invoice agreement',
        serviceManagerName: 'Service Manager',
        protocolCode: 'framework agreement',
        relationContract: 'related sales',
        businessName: 'Business type',
        makerDate: 'single date',
        makerUserName: 'single person',
        modifyDate: 'modification date'
      },
      edit: {
        mainInfo: 'Purchasing batch information',
        productTitle: 'Commodity information',
        payTitle: 'Delivery and payment',
        promiseTitle: 'Margin agreement',
        priceTitle: 'Pricing information',
        attachTitle: 'Enclosure',
        authTitle: 'Review history',
        contractBatch: 'Sales contract / batch',
        purchaseContractTitle: 'Procurement contract',
        purDeliveryTitle: 'Purchase order',
        instoreDetailTitle: 'Warehousing details',
        invoiceDetailTitle: 'List of invoices',
        priceDetailTitle: 'Pricing details',
        payApplyTitle: 'Application for payment',
        payDetailTitle: 'Payment details',
        parentContractId: 'Contract numbe',
        contractNo: 'batch number',
        purchaseSaleType: 'Purchase and sale type',
        contractType: 'type of contract',
        originalNo: 'Contract No.',
        tradeType: 'Type of trade',
        titleId: ' title',
        deptId: 'department',
        currencyId: 'currency',
        customerId: 'Customer name',
        projectId: 'Project',
        businessName: 'Business type',
        customerTitleId: 'Customer title',
        serviceManagerId: 'Service Manager',
        frameProtocolId: 'framework agreement',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'Batch arrest',
        relationContract: 'related sales',
        productCategoryId: 'Commodity classification',
        reference: 'Reference'
      }
    },

    // 销售合同
    saleOrder: {
      name: 'sales contract',
      // 查询面板
      query: {
        contractNo: 'Contract number',
        titleId: 'title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        productId: 'Commodity name',
        contractStat: 'State of contract',
        originalNo: 'Contract No.',
        frameProtocolId: 'Framework agreement',
        serviceManagerId: 'Service Manager',
        businessName: 'Business type',
        relationContract: 'Associated sales',
        signDate: 'Date of signing',
        signDateFrom: 'Start date of signing',
        signDateTo: 'End date of signing',
        contractType: 'type of contract'
      },
      queryList: {
        title: 'sales contract',
        contractStat: 'State of contract',
        titleName: 'title',
        contractNo: 'Contract number',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        originalNo: 'Contract No.',
        contractType: 'type of contract',
        tradeType: 'Type of trade',
        productName: 'Commodity name',
        quantity: 'Number of contracts',
        currencyName: 'currency',
        contractStartDate: 'Beginning of the contract period',
        contractEndDate: 'End of contract period',
        deliveryType: 'Delivery mode',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport',
        paymentTypeName: 'Payment method',
        settlementBasis: 'Basis of settlement',
        invoiceAgreement: 'Invoice agreement',
        serviceManagerName: 'Service Manager',
        signDate: 'Date of signing',
        protocolCode: 'Framework agreement',
        relationContract: 'Related sales contract',
        businessName: 'Business type',
        makerDate: 'Date of production',
        makerUserName: 'DocumentMaker',
        changeDate: 'Change date',
        changeUserName: 'Change person',
        closeDate: 'Closing date',
        closeUserName: 'Close the person'
      },
      edit: {
        mainInfo: 'sales contract information',
        contractNo: 'Contract number',
        purchaseSaleType: 'Purchase and sale type',
        contractType: 'type of contract',
        titleId: 'title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        deptId: 'department',
        originalNo: 'Contract No.',
        documentNo: 'Document number',
        frameProtocolId: 'Framework agreement',
        projectId: 'Project',
        tradeType: 'Type of trade',
        currencyId: 'currency',
        relationContract: 'Associated sales',
        businessName: 'Business type',
        signDate: 'Date of signing',
        serviceManagerId: 'Service Manager',
        contractStartDate: 'Beginning of the contract period',
        contractEndDate: 'End of contract period',
        contractStat: 'State of contract',
        productCategoryId: 'Commodity classification'
      },
      changeHistoryTitle: 'Change record',
      changeRemarkTitle: 'Change instructions',
      changeInfoTitle: 'Change information',
      authTitle: 'Audit record',
      saleContracTitle: 'sales contract',
      purContractBatch: 'Purchase contract / batch',
      saleBatchTitle: 'Sales batch',
      saleDeliveryTitle: 'Sales order',
      outstockDetailTitle: 'Storehouse',
      receiptDetailTitle: 'Receivables',

      // 变更历史
      modifyHistory: {
        changeDate: 'Change date',
        changeUserName: 'Change person',
        changeRemark: 'Change instructions'
      },
      // Change instructions
      changeRemark: {
        changeDate: 'Change date',
        changeUserName: 'Change person',
        changeRemark: 'Change instructions'
      },
      // Sales batch
      saleBatchList: {
        titleName: 'title',
        contractNo: 'batch number',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        originalNo: 'Contract No.',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'End of batch period',
        productName: 'Commodity name',
        quantity: 'batch quantity',
        currencyName: 'currency',
        deliveryType: 'Delivery mode',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport',
        paymentTypeName: 'Payment method',
        settlementBasis: 'Basis of settlement',
        invoiceAgreement: 'Invoice agreement',
        serviceManagerName: 'Service Manager',
        signDate: 'Date of signing',
        protocolCode: 'Framework agreement',
        relationContract: 'Related procurement',
        makerDate: 'Date of production',
        makerUserName: 'DocumentMaker',
        modifyDate: 'modification date',
        modifyUserName: 'Modifier'
      }
    },

    // Sales batch
    saleBatch: {
      name: 'Sales batch list',
      query: {
        contractNo: 'batch number',
        titleId: 'title',
        customerId: 'Customer name',
        customerTitleId: 'Customer title',
        productId: 'Commodity name',
        serviceManagerId: 'Service Manager',
        originalNo: 'Contract No.',
        frameProtocolId: 'Framework agreement',
        relationBatchNo: 'Related procurement',
        businessName: 'Business type'
      },
      title: {
        contractStat: 'Batch state',
        titleName: 'title',
        contractNo: 'batch number',
        customerName: 'Customer name',
        customerTitleName: 'Customer title',
        originalNo: 'Contract No.',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'End of batch period',
        tradeType: 'Type of trade',
        productName: 'Commodity name',
        quantity: 'batch quantity',
        currencyName: 'currency',
        deliveryType: 'Delivery mode',
        deliveryPlaceName: 'Place of delivery',
        transportType: 'Mode of transport',
        paymentTypeName: 'Payment method',
        settlementBasis: 'Basis of settlement',
        invoiceAgreement: 'Invoice agreement',
        protocolCode: 'Framework agreement',
        serviceManagerName: 'Service Manager',
        relationContract: 'Related procurement',
        businessName: 'Business type',
        makerDate: 'Date of production',
        makerUserName: 'DocumentMaker',
        modifyDate: 'modification date'
      },
      // 新增修改页面
      edit: {
        mainInfo: 'Sales batch information',
        contractNo: 'batch number',
        purchaseSaleType: 'Purchase and sale type',
        contractType: 'type of contract',
        originalNo: 'Contract No.',
        tradeType: 'Type of trade',
        titleId: 'title',
        deptId: 'department',
        currencyId: 'currency',
        customerId: 'Customer name',
        projectId: 'Project',
        businessName: 'Business type',
        customerTitleId: 'Customer title',
        serviceManagerId: 'Service Manager',
        frameProtocolId: 'Framework agreement',
        contractStartDate: 'Batch beginning',
        contractEndDate: 'End of batch period',
        relationContract: 'Related procurement',
        parentContractId: 'Contract number',
        productCategoryName: 'Commodity classification',
        pur: 'Purchase',
        sale: 'Sale',
        order: 'Mono',
        longOrder: 'Long list'
      }
    }
  }
}
